# Canonical URL of the provider, also used for configuration discovery.
# This value MUST match the value returned in the provider config discovery.
#
# See: https://openid.net/specs/openid-connect-discovery-1_0.html#ProviderConfig
issuer: ${OCI_KUBEFLOW_ISSUER} 
#http://dex.auth.svc.cluster.local:5556/dex

connectors:
- type: oidc
  id: idcs
  name: idcs
  config:
    issuer: ${OCI_KUBEFLOW_IDCS_URL}

    # Connector config values starting with a "$" will read from the environment.
    clientID: ${OCI_KUBEFLOW_IDCS_CLIENT_ID}
    clientSecret: ${OCI_KUBEFLOW_IDCS_CLIENT_SECRET}

    # Dex's issuer URL + "/callback"
    redirectURI: ${OCI_KUBEFLOW_ISSUER}/callback
    #http://127.0.0.1:5556/dex/callback

    # When enabled, the OpenID Connector will query the UserInfo endpoint for additional claims. UserInfo claims
    # take priority over claims returned by the IDToken. This option should be used when the IDToken doesn't contain
    # all the claims requested.
    # https://openid.net/specs/openid-connect-core-1_0.html#UserInfo
    getUserInfo: true

    # The set claim is used as user id.
    # Claims list at https://openid.net/specs/openid-connect-core-1_0.html#Claims
    # Default: sub
    userIDKey: sub

    # The set claim is used as user name.
    # Default: name
    userNameKey: user_displayname

storage:
  type: kubernetes
  config:
    inCluster: true
web:
  http: 0.0.0.0:5556
logger:
  level: "debug"
  format: text

staticClients:
# https://github.com/dexidp/dex/pull/1664
- idEnv: OIDC_CLIENT_ID
  redirectURIs: ["/authservice/oidc/callback"]
  name: 'Dex Login Application'
  secretEnv: OIDC_CLIENT_SECRET

oauth2:
  skipApprovalScreen: true
